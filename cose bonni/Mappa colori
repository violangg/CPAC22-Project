import matplotlib.pyplot as plt
import numpy as np

# Define the four colors for the corners
color1 = "#FF0000"  # red
color2 = "#00FF00"  # green
color3 = "#0000FF"  # blue
color4 = "#FFFF00"  # yellow

# Define the size of the color map
width, height = 200, 100

# Convert the corner colors to RGB arrays
color1_rgb = np.array([int(c, 16) for c in (color1[1:3], color1[3:5], color1[5:7])]) / 255
color2_rgb = np.array([int(c, 16) for c in (color2[1:3], color2[3:5], color2[5:7])]) / 255
color3_rgb = np.array([int(c, 16) for c in (color3[1:3], color3[3:5], color3[5:7])]) / 255
color4_rgb = np.array([int(c, 16) for c in (color4[1:3], color4[3:5], color4[5:7])]) / 255

# Create a 2D array of colors by interpolating the corner colors
colors = np.zeros((height, width, 3))
for i in range(height):
    for j in range(width):
        colors[i, j] = (1 - i / height) * (1 - j / width) * color1_rgb + (1 - i / height) * (j / width) * color2_rgb + (i / height) * (1 - j / width) * color3_rgb + (i / height) * (j / width) * color4_rgb

# Create a figure with a single subplot
fig, ax = plt.subplots(1, 1)

# Set the colormap of the subplot to the array of colors
ax.imshow(colors, interpolation="nearest")

# Remove the axes
ax.axis("off")

# Show the figure
plt.show()
